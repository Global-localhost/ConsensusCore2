
#include <cassert>
#include <cmath>
#include <stdexcept>

#include <pacbio/consensus/ModelConfig.h>

#include "../ModelFactory.h"

namespace PacBio {
namespace Consensus {
namespace {

class SP1C1BetaNoCovModel : public ModelConfig
{
    REGISTER_MODEL(SP1C1BetaNoCovModel);

public:
    SP1C1BetaNoCovModel(const SNR& snr);
    std::vector<TemplatePosition> Populate(const std::string& tpl) const;
    double BaseEmissionPr(MoveType move, char from, char to) const;
    double CovEmissionPr(MoveType move, uint8_t cov, char from, char to) const;
    double UndoCounterWeights(size_t nEmissions) const;

    static std::string Name() { return "S/P1-C1/beta"; }
private:
    SNR snr_;
};
    REGISTER_MODEL_IMPL(SP1C1BetaNoCovModel);
    
namespace {

    double matchPmf[16][12]  = {
        
        {   0.0542854776,   0.00153366326,  0.000497628597,  0.000217251389,     0.077144621,   0.00129925739,   0.00161098242,  5.30521357e-05,     0.856237003,   0.00520582651,   0.00170904945,  0.000144042653},
        {  0.00566862468,    0.0146338895,  4.61144761e-05,  0.000238337424,    0.0177495171,    0.0423088383,  0.000152263616,  0.000111476436,    0.0252627813,      0.89351065,   0.00014694979,  0.000102997894},
        { 0.000509305389,   6.5772107e-05,    0.0184578295,   0.00344247165,  0.000904774637,  0.000110360283,    0.0755428252,   0.00235321059,  0.000162123635,  0.000658613488,     0.887072648,    0.0106431592},
        { 0.000125387692,  2.17819457e-05,    0.0093258915,    0.0195643986,  0.000241490074,  1.69946898e-05,    0.0383686411,    0.0532310618,  0.000233378277,  0.000554206792,    0.0887203471,     0.789529802},
        {   0.0223867372,   0.00114982515,  0.000432103626,  0.000421994955,    0.0696416073,  0.000653090119,   0.00162573108,  0.000136191415,     0.899676157,   0.00252455825,   0.00124590479,  3.78191635e-05},
        {   0.0382255568,    0.0132757101,  2.74773068e-05,  0.000212209067,    0.0160271247,    0.0358622534,  6.67516608e-05,  5.40860111e-05,    0.0253375963,     0.870744503,  4.99432942e-05,  5.42930344e-05},
        { 0.000214592905,  4.40009477e-05,   0.00821706373,     0.001520181,  0.000192339196,  2.93620961e-05,    0.0373709243,   0.00184852502,  0.000395982367,  0.000229435049,     0.942445767,    0.0074373949},
        { 0.000116313094,  9.51360545e-05,   0.00982924159,        0.019408,   9.7872823e-05,  8.06038135e-05,     0.038581029,    0.0548069107,  0.000650331161,  0.000419527513,    0.0889442091,     0.786890766},
        {    0.011066204,  0.000338717741,  0.000481756725,  7.94096121e-05,    0.0367490522,  0.000298638775,  0.000604339697,  2.27844012e-05,     0.945101814,   0.00392679562,    0.0011769395,  8.36061845e-05},
        {  0.00259160387,   0.00729181669,  6.47935715e-05,  7.82657916e-05,   0.00811774808,    0.0216525876,   0.00014178443,  3.82862243e-05,    0.0195545246,     0.940126282,  0.000119488347,  0.000168661916},
        {     0.03159773,  0.000124417769,   0.00704236651,  0.000788981938,  0.000265794823,  3.24795175e-05,    0.0301680456,    0.0011638186,  0.000498572711,  0.000121642773,      0.92194074,   0.00619144928},
        { 8.36363733e-05,  2.97663274e-05,   0.00490919565,   0.00963476996,  0.000392983833,  4.43169853e-05,     0.018590413,    0.0297346966,   0.00042012159,   0.00062023121,    0.0623299343,     0.873136501},
        {   0.0195411939,   0.00119487632,  0.000392368964,  0.000160856761,    0.0623377377,  0.000904352361,    0.0014032121,  3.46009397e-05,     0.907688825,    0.0049673641,   0.00120406232,  0.000102269018},
        {   0.0023913782,    0.0076531823,  0.000144404346,  6.68325481e-05,   0.00881264567,    0.0217407061,  7.79925106e-05,  2.80809644e-05,    0.0175512254,     0.941094073,  0.000110705092,  0.000258733028},
        { 7.55667491e-05,   0.00011500547,   0.00821945771,   0.00147147941,  0.000232136431,  4.00916444e-05,    0.0401908836,   0.00129765154,  0.000873367284,  0.000220047938,     0.939682657,   0.00751429642},
        {   0.0314040091,  0.000618615426,   0.00744384298,   0.00996556972,   0.00291682532,   0.00104342472,    0.0191326395,    0.0267360459,    0.0292515845,    0.0291008823,    0.0883253368,     0.754005185}
    };
    
    double stickPmf[16][12]  = {
        
        { 0.000684425857,    0.0442828167,       0.4468868,    0.0263906404,  0.000684425857,   0.00971482041,     0.121638489,    0.0253919679,  0.000684425857,    0.0957909924,      0.16469934,    0.0597287265},
        {    0.128594257,  0.000247142459,     0.327895288,    0.0235731088,    0.0491383308,  0.000247142459,     0.101457531,    0.0186829073,     0.230416612,  0.000247142459,    0.0699166874,    0.0483481376},
        {    0.396119868,     0.036022405,    0.0013334247,     0.120013631,    0.0605490884,   0.00596790503,    0.0013334247,    0.0560941334,     0.161037659,    0.0752553022,    0.0013334247,    0.0782726096},
        {    0.275083443,    0.0111889601,     0.287454022,  0.000523736602,    0.0486802848,   0.00938365436,    0.0583873519,  0.000523736602,      0.23264506,    0.0327218542,    0.0402654769,  0.000523736602},
        { 0.000326306442,    0.0125729383,     0.464406581,     0.023680944,  0.000326306442,    0.0156726223,     0.102578537,   0.00486048654,  0.000326306442,     0.259905877,    0.0996943615,    0.0140172015},
        {    0.106039554,  0.000311402241,     0.458377623,    0.0320788017,     0.057148446,  0.000162443604,     0.130978186,   0.00982726176,     0.085346891,  0.000171071171,    0.0960442687,    0.0227025216},
        {    0.307802527,     0.019405398,   0.00036484432,    0.0322779037,    0.0961796761,    0.0201228378,   0.00036484432,    0.0147267944,     0.137360701,      0.33522501,   0.00036484432,     0.033980397},
        {    0.185579487,   0.00689765068,     0.233720771,  0.000306956889,     0.056305117,    0.0202196774,    0.0577288053,  0.000306956889,    0.0935184328,     0.316974436,    0.0265999677,  0.000306956889},
        {  0.00068355652,    0.0238494341,     0.426975942,    0.0323603646,   0.00068355652,   0.00865093008,     0.088041099,    0.0123996919,   0.00068355652,     0.073961037,     0.229225998,    0.0990670507},
        {   0.0805466775,  0.000127045988,     0.335619825,    0.0262639026,     0.034315873,  0.000127045988,     0.145373112,    0.0104715571,    0.0333232212,  0.000127045988,     0.295052589,    0.0380168745},
        {    0.422070102,    0.0388955811,   0.00553098289,     0.058836061,     0.120631959,    0.0143780462,   0.00123997293,    0.0179468868,     0.123626008,    0.0389519724,   0.00121504279,     0.150838681},
        {     0.24967596,    0.0196829117,     0.229666024,  0.000466215191,    0.0516092762,    0.0117244247,     0.119698602,  0.000466215191,    0.0370703033,    0.0147841121,     0.262358664,  0.000466215191},
        {  0.00036857052,    0.0224373328,     0.275772366,    0.0286052105,   0.00036857052,   0.00431231974,    0.0925299121,     0.020439214,   0.00036857052,    0.0707356289,     0.187846227,     0.294373224},
        {    0.101482909,  0.000213697556,      0.24538254,    0.0223937253,    0.0405465806,  0.000213697556,    0.0849604879,    0.0252651074,    0.0453316542,  0.000213697556,      0.11562683,     0.317300584},
        {    0.293072995,    0.0106890319,   0.00053696875,    0.0384424509,    0.0541655952,   0.00576732992,   0.00053696875,    0.0341216854,    0.0541312754,    0.0111053978,   0.00053696875,     0.494208488},
        {    0.143043634,    0.0109037313,     0.237691625,   0.00122622163,    0.0506554344,   0.00650694203,     0.229151794,  0.000417724291,    0.0158340027,   0.00983709158,     0.292757597,   0.00035998169}
    };
    
    double branchPmf[16][12]  = {
        
        {    0.457957293,  0.000865670102,  0.000865670102,  0.000865670102,     0.188149425,  0.000865670102,  0.000865670102,  0.000865670102,     0.341773901,  0.000865670102,  0.000865670102,  0.000865670102},
        {  0.00230737431,     0.219974123,   0.00230737431,   0.00230737431,   0.00230737431,     0.177771028,   0.00230737431,   0.00230737431,   0.00230737431,     0.569951609,   0.00230737431,   0.00230737431},
        { 0.000810995765,  0.000810995765,     0.449747723,  0.000810995765,  0.000810995765,  0.000810995765,     0.178801435,  0.000810995765,  0.000810995765,  0.000810995765,     0.360096901,  0.000810995765},
        {  0.00547638282,   0.00547638282,   0.00547638282,     0.265056941,   0.00547638282,   0.00547638282,   0.00547638282,      0.15014349,   0.00547638282,   0.00547638282,   0.00547638282,     0.508130209},
        {    0.170217643,  0.000193948464,  0.000193948464,  0.000193948464,     0.153186975,  0.000193948464,  0.000193948464,  0.000193948464,     0.673880103,  0.000193948464,  0.000193948464,  0.000193948464},
        { 0.000290978901,    0.0463908684,  0.000290258301,  0.000290258301,  0.000290624326,    0.0528574273,  0.000290258301,  0.000290258301,   0.00029427632,     0.896682983,  0.000290258301,  0.000290258301},
        { 0.000312736075,  0.000312736075,     0.389518799,  0.000312736075,  0.000312736075,  0.000312736075,     0.116508089,  0.000312736075,  0.000312736075,  0.000312736075,     0.489594807,  0.000312736075},
        {  0.00223778198,   0.00223778198,   0.00223778198,     0.174070745,   0.00223778198,   0.00223778198,   0.00223778198,     0.119350225,   0.00223778198,   0.00223778198,   0.00223778198,     0.675250082},
        {    0.131250181,  0.000202415212,  0.000202415212,  0.000202415212,     0.102871375,  0.000202415212,  0.000202415212,  0.000202415212,     0.763044631,  0.000202415212,  0.000202415212,  0.000202415212},
        { 0.000456587307,    0.0532939323,  0.000456587307,  0.000456587307,  0.000456587307,    0.0913901804,  0.000456587307,  0.000456587307,  0.000456587307,     0.848923665,  0.000456587307,  0.000456587307},
        { 0.000506126979,  0.000504778492,     0.260622318,  0.000504778492,  0.000504863191,  0.000504778492,     0.129659591,  0.000504778492,  0.000506946252,  0.000504778492,     0.602647591,  0.000504778492},
        { 0.000680233619,  0.000680233619,  0.000680233619,    0.0595429692,  0.000680233619,  0.000680233619,  0.000680233619,    0.0765038572,  0.000680233619,  0.000680233619,  0.000680233619,     0.854429903},
        {    0.132561775,  0.000170330328,  0.000170330328,  0.000170330328,     0.131143245,  0.000170330328,  0.000170330328,  0.000170330328,     0.733910355,  0.000170330328,  0.000170330328,  0.000170330328},
        { 0.000342833957,    0.0355003175,  0.000342833957,  0.000342833957,  0.000342833957,    0.0634633909,  0.000342833957,  0.000342833957,  0.000342833957,     0.896236616,  0.000342833957,  0.000342833957},
        { 0.000318694225,  0.000318694225,     0.201521742,  0.000318694225,  0.000318694225,  0.000318694225,     0.103492212,  0.000318694225,  0.000318694225,  0.000318694225,     0.690524327,  0.000318694225},
        {  0.00015972728,  0.000159252573,  0.000159252573,    0.0503090045,  0.000160106928,  0.000159252573,  0.000159252573,    0.0847079787,  0.000221490811,  0.000159252573,  0.000159252573,     0.862689913}
    };
    
    double transProbs[16][4] = {
        
        {     0.89940035,    0.0128026984,    0.0161611805,    0.0716357715}, // CTX - 0
        {    0.927474116,   0.00542751599,    0.0505005274,    0.0165978403}, // CTX - 1
        {      0.9145781,    0.0175191888,    0.0103437523,    0.0575589586}, // CTX - 2
        {    0.888925386,   0.00217629627,    0.0224278964,    0.0864704216}, // CTX - 3
        {      0.8586584,     0.060269623,    0.0355944084,    0.0454775683}, // CTX - 4
        {    0.855935776,    0.0366713543,    0.0657532769,    0.0416395932}, // CTX - 5
        {    0.912507135,    0.0319880046,    0.0268923457,    0.0286125145}, // CTX - 6
        {    0.860217879,   0.00625438793,    0.0444955312,    0.0890322018}, // CTX - 7
        {    0.896702265,    0.0617284071,    0.0178530165,    0.0237163118}, // CTX - 8
        {    0.894143556,    0.0212157686,    0.0756867458,   0.00895392977}, // CTX - 9
        {    0.901181567,    0.0226106446,   0.00969863163,    0.0665091572}, // CTX - 10
        {    0.872771895,    0.0190172983,    0.0269117864,    0.0812990205}, // CTX - 11
        {    0.857576422,    0.0685667786,    0.0312385969,    0.0426182026}, // CTX - 12
        {     0.89644051,    0.0365960294,    0.0581983531,   0.00876510728}, // CTX - 13
        {    0.907217422,    0.0384421466,    0.0221752657,    0.0321651662}, // CTX - 14
        {    0.825315326,    0.0649400082,    0.0319760388,     0.077768627} // CTX - 15
    };
    
    
}

SP1C1BetaNoCovModel::SP1C1BetaNoCovModel(const SNR& snr) : snr_(snr) {}
std::vector<TemplatePosition> SP1C1BetaNoCovModel::Populate(const std::string& tpl) const
{
    std::vector<TemplatePosition> result;

    if (tpl.empty()) return result;
    
    uint8_t prev = detail::TranslationTable[static_cast<uint8_t>(tpl[0])];
    
    for (size_t i = 1; i < tpl.size(); ++i) {
        const uint8_t cur = detail::TranslationTable[static_cast<uint8_t>(tpl[i])];
        if (cur > 3) throw std::invalid_argument("invalid character in sequence!");
        const auto row = (prev << 2) | cur;
        const auto params = transProbs[row];

        result.emplace_back(TemplatePosition{
            tpl[i - 1],
            params[0],  // match
            params[1],  // branch
            params[2],  // stick
            params[3]   // deletion
        });
        prev = cur;
    }

    result.emplace_back(TemplatePosition{tpl.back(), 1.0, 0.0, 0.0, 0.0});

    return result;
}

double SP1C1BetaNoCovModel::BaseEmissionPr(MoveType move, const char from, const char to) const
{
    // All emissions are now "Covariate Emissions"
    assert(move != MoveType::DELETION);
    return 1.0;
}

double SP1C1BetaNoCovModel::CovEmissionPr(MoveType move, uint8_t nuc, char from, char to) const
{
    auto ito = detail::TranslationTable[static_cast<uint8_t>(to)];
    auto ifrom = detail::TranslationTable[static_cast<uint8_t>(from)];
    ifrom = ifrom > 3 ? 0 : ifrom;
    ito = ito > 3 ? 0 : ito;
    const auto row = (ifrom << 2) | ito;
    
    if (ito > 3 || nuc > 12 || ifrom > 3) throw std::invalid_argument("invalid character in sequence");

    if (move == MoveType::BRANCH)
        return branchPmf[row][nuc];
    else if (move == MoveType::STICK)
        return stickPmf[row][nuc];
    else if (move == MoveType::MATCH)
        return matchPmf[row][nuc];

    throw std::invalid_argument("unknown move type!");
}

double SP1C1BetaNoCovModel::UndoCounterWeights(const size_t nEmissions) const { return 0; }
}  // namespace anonymous
}  // namespace Consensus
}  // namespace PacBio
